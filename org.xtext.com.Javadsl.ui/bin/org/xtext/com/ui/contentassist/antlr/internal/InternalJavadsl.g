/*
 * generated by Xtext
 */
grammar InternalJavadsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	 memoize=true;
	
}

@lexer::header {
package org.xtext.com.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.com.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.com.services.JavadslGrammarAccess;

}

@parser::members {
 
 	private JavadslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JavadslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleHead
entryRuleHead 
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadAccess().getJavaAssignment()); }
(rule__Head__JavaAssignment)
{ after(grammarAccess.getHeadAccess().getJavaAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit 
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilationUnitAccess().getGroup()); }
(rule__CompilationUnit__Group__0)
{ after(grammarAccess.getCompilationUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageStatement
entryRulePackageStatement 
:
{ before(grammarAccess.getPackageStatementRule()); }
	 rulePackageStatement
{ after(grammarAccess.getPackageStatementRule()); } 
	 EOF 
;

// Rule PackageStatement
rulePackageStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageStatementAccess().getGroup()); }
(rule__PackageStatement__Group__0)
{ after(grammarAccess.getPackageStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportStatement
entryRuleImportStatement 
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatementAccess().getGroup()); }
(rule__ImportStatement__Group__0)
{ after(grammarAccess.getImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportStatement_
entryRuleImportStatement_ 
:
{ before(grammarAccess.getImportStatement_Rule()); }
	 ruleImportStatement_
{ after(grammarAccess.getImportStatement_Rule()); } 
	 EOF 
;

// Rule ImportStatement_
ruleImportStatement_
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatement_Access().getGroup()); }
(rule__ImportStatement___Group__0)
{ after(grammarAccess.getImportStatement_Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectName
entryRuleObjectName 
:
{ before(grammarAccess.getObjectNameRule()); }
	 ruleObjectName
{ after(grammarAccess.getObjectNameRule()); } 
	 EOF 
;

// Rule ObjectName
ruleObjectName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectNameAccess().getGroup()); }
(rule__ObjectName__Group__0)
{ after(grammarAccess.getObjectNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
(rule__TypeDeclaration__Group__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
(rule__ClassDeclaration__Group__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration 
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
(rule__InterfaceDeclaration__Group__0)
{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration 
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDeclarationAccess().getAlternatives()); }
(rule__FieldDeclaration__Alternatives)
{ after(grammarAccess.getFieldDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticInitializer
entryRuleStaticInitializer 
:
{ before(grammarAccess.getStaticInitializerRule()); }
	 ruleStaticInitializer
{ after(grammarAccess.getStaticInitializerRule()); } 
	 EOF 
;

// Rule StaticInitializer
ruleStaticInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticInitializerAccess().getGroup()); }
(rule__StaticInitializer__Group__0)
{ after(grammarAccess.getStaticInitializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration 
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
(rule__MethodDeclaration__Group__0)
{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorDeclaration
entryRuleConstructorDeclaration 
:
{ before(grammarAccess.getConstructorDeclarationRule()); }
	 ruleConstructorDeclaration
{ after(grammarAccess.getConstructorDeclarationRule()); } 
	 EOF 
;

// Rule ConstructorDeclaration
ruleConstructorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
(rule__ConstructorDeclaration__Group__0)
{ after(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementBlock
entryRuleStatementBlock 
:
{ before(grammarAccess.getStatementBlockRule()); }
	 ruleStatementBlock
{ after(grammarAccess.getStatementBlockRule()); } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup()); }
(rule__StatementBlock__Group__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator 
:
{ before(grammarAccess.getVariableDeclaratorRule()); }
	 ruleVariableDeclarator
{ after(grammarAccess.getVariableDeclaratorRule()); } 
	 EOF 
;

// Rule VariableDeclarator
ruleVariableDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
(rule__VariableDeclarator__Group__0)
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableInitializer
entryRuleVariableInitializer 
:
{ before(grammarAccess.getVariableInitializerRule()); }
	 ruleVariableInitializer
{ after(grammarAccess.getVariableInitializerRule()); } 
	 EOF 
;

// Rule VariableInitializer
ruleVariableInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
(rule__VariableInitializer__Alternatives)
{ after(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getNumericExpressionParserRuleCall()); }
	ruleNumericExpression
{ after(grammarAccess.getExpressionAccess().getNumericExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericExpression
entryRuleNumericExpression 
:
{ before(grammarAccess.getNumericExpressionRule()); }
	 ruleNumericExpression
{ after(grammarAccess.getNumericExpressionRule()); } 
	 EOF 
;

// Rule NumericExpression
ruleNumericExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericExpressionAccess().getAlternatives()); }
(rule__NumericExpression__Alternatives)
{ after(grammarAccess.getNumericExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitExpression
entryRuleBitExpression 
:
{ before(grammarAccess.getBitExpressionRule()); }
	 ruleBitExpression
{ after(grammarAccess.getBitExpressionRule()); } 
	 EOF 
;

// Rule BitExpression
ruleBitExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitExpressionAccess().getAlternatives()); }
(rule__BitExpression__Alternatives)
{ after(grammarAccess.getBitExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestingExpression
entryRuleTestingExpression 
:
{ before(grammarAccess.getTestingExpressionRule()); }
	 ruleTestingExpression
{ after(grammarAccess.getTestingExpressionRule()); } 
	 EOF 
;

// Rule TestingExpression
ruleTestingExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestingExpressionAccess().getGroup()); }
(rule__TestingExpression__Group__0)
{ after(grammarAccess.getTestingExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression 
:
{ before(grammarAccess.getLogicalExpressionRule()); }
	 ruleLogicalExpression
{ after(grammarAccess.getLogicalExpressionRule()); } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives()); }
(rule__LogicalExpression__Alternatives)
{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgsExpression
entryRuleArgsExpression 
:
{ before(grammarAccess.getArgsExpressionRule()); }
	 ruleArgsExpression
{ after(grammarAccess.getArgsExpressionRule()); } 
	 EOF 
;

// Rule ArgsExpression
ruleArgsExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgsExpressionAccess().getGroup()); }
(rule__ArgsExpression__Group__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArglist
entryRuleArglist 
:
{ before(grammarAccess.getArglistRule()); }
	 ruleArglist
{ after(grammarAccess.getArglistRule()); } 
	 EOF 
;

// Rule Arglist
ruleArglist
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArglistAccess().getGroup()); }
(rule__Arglist__Group__0)
{ after(grammarAccess.getArglistAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCastingExpression
entryRuleCastingExpression 
:
{ before(grammarAccess.getCastingExpressionRule()); }
	 ruleCastingExpression
{ after(grammarAccess.getCastingExpressionRule()); } 
	 EOF 
;

// Rule CastingExpression
ruleCastingExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastingExpressionAccess().getGroup()); }
(rule__CastingExpression__Group__0)
{ after(grammarAccess.getCastingExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreatingExpression
entryRuleCreatingExpression 
:
{ before(grammarAccess.getCreatingExpressionRule()); }
	 ruleCreatingExpression
{ after(grammarAccess.getCreatingExpressionRule()); } 
	 EOF 
;

// Rule CreatingExpression
ruleCreatingExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup()); }
(rule__CreatingExpression__Group__0)
{ after(grammarAccess.getCreatingExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesisExpression
entryRuleParenthesisExpression 
:
{ before(grammarAccess.getParenthesisExpressionRule()); }
	 ruleParenthesisExpression
{ after(grammarAccess.getParenthesisExpressionRule()); } 
	 EOF 
;

// Rule ParenthesisExpression
ruleParenthesisExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getGroup()); }
(rule__ParenthesisExpression__Group__0)
{ after(grammarAccess.getParenthesisExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression 
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueAssignment()); }
(rule__LiteralExpression__Literal_valueAssignment)
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier 
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
(rule__TypeSpecifier__NameAssignment)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacter
entryRuleCharacter 
:
{ before(grammarAccess.getCharacterRule()); }
	 ruleCharacter
{ after(grammarAccess.getCharacterRule()); } 
	 EOF 
;

// Rule Character
ruleCharacter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getCharacterAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledecimal_digits
entryRuledecimal_digits 
:
{ before(grammarAccess.getDecimal_digitsRule()); }
	 ruledecimal_digits
{ after(grammarAccess.getDecimal_digitsRule()); } 
	 EOF 
;

// Rule decimal_digits
ruledecimal_digits
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimal_digitsAccess().getGroup()); }
(rule__Decimal_digits__Group__0)
{ after(grammarAccess.getDecimal_digitsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexponent_part
entryRuleexponent_part 
:
{ before(grammarAccess.getExponent_partRule()); }
	 ruleexponent_part
{ after(grammarAccess.getExponent_partRule()); } 
	 EOF 
;

// Rule exponent_part
ruleexponent_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExponent_partAccess().getEKeyword()); }

	'0..9e' 

{ after(grammarAccess.getExponent_partAccess().getEKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
(rule__IntegerLiteral__Alternatives)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledecimal_integer_literal
entryRuledecimal_integer_literal 
:
{ before(grammarAccess.getDecimal_integer_literalRule()); }
	 ruledecimal_integer_literal
{ after(grammarAccess.getDecimal_integer_literalRule()); } 
	 EOF 
;

// Rule decimal_integer_literal
ruledecimal_integer_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimal_integer_literalAccess().getGroup()); }
(rule__Decimal_integer_literal__Group__0)
{ after(grammarAccess.getDecimal_integer_literalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulehex_integer_literal
entryRulehex_integer_literal 
:
{ before(grammarAccess.getHex_integer_literalRule()); }
	 rulehex_integer_literal
{ after(grammarAccess.getHex_integer_literalRule()); } 
	 EOF 
;

// Rule hex_integer_literal
rulehex_integer_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHex_integer_literalAccess().getGroup()); }
(rule__Hex_integer_literal__Group__0)
{ after(grammarAccess.getHex_integer_literalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulehexa_numeral
entryRulehexa_numeral 
:
{ before(grammarAccess.getHexa_numeralRule()); }
	 rulehexa_numeral
{ after(grammarAccess.getHexa_numeralRule()); } 
	 EOF 
;

// Rule hexa_numeral
rulehexa_numeral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexa_numeralAccess().getAlternatives()); }
(rule__Hexa_numeral__Alternatives)
{ after(grammarAccess.getHexa_numeralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoctal_integer_literal
entryRuleoctal_integer_literal 
:
{ before(grammarAccess.getOctal_integer_literalRule()); }
	 ruleoctal_integer_literal
{ after(grammarAccess.getOctal_integer_literalRule()); } 
	 EOF 
;

// Rule octal_integer_literal
ruleoctal_integer_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOctal_integer_literalAccess().getGroup()); }
(rule__Octal_integer_literal__Group__0)
{ after(grammarAccess.getOctal_integer_literalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoctal_numeral
entryRuleoctal_numeral 
:
{ before(grammarAccess.getOctal_numeralRule()); }
	 ruleoctal_numeral
{ after(grammarAccess.getOctal_numeralRule()); } 
	 EOF 
;

// Rule octal_numeral
ruleoctal_numeral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOctal_numeralAccess().getZERO_TO_SEVENTerminalRuleCall()); }
(	RULE_ZERO_TO_SEVEN)*
{ after(grammarAccess.getOctal_numeralAccess().getZERO_TO_SEVENTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getAlternatives()); }
(rule__FloatLiteral__Alternatives)
{ after(grammarAccess.getFloatLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement 
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryStatement
entryRuleTryStatement 
:
{ before(grammarAccess.getTryStatementRule()); }
	 ruleTryStatement
{ after(grammarAccess.getTryStatementRule()); } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryStatementAccess().getGroup()); }
(rule__TryStatement__Group__0)
{ after(grammarAccess.getTryStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhile_statement
entryRulewhile_statement 
:
{ before(grammarAccess.getWhile_statementRule()); }
	 rulewhile_statement
{ after(grammarAccess.getWhile_statementRule()); } 
	 EOF 
;

// Rule while_statement
rulewhile_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhile_statementAccess().getGroup()); }
(rule__While_statement__Group__0)
{ after(grammarAccess.getWhile_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TypeDeclaration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getClass_declarationAssignment_0_0()); }
(rule__TypeDeclaration__Class_declarationAssignment_0_0)
{ after(grammarAccess.getTypeDeclarationAccess().getClass_declarationAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getInterface_declarationAssignment_0_1()); }
(rule__TypeDeclaration__Interface_declarationAssignment_0_1)
{ after(grammarAccess.getTypeDeclarationAccess().getInterface_declarationAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getDeclarationAssignment_0()); }
(rule__FieldDeclaration__DeclarationAssignment_0)
{ after(grammarAccess.getFieldDeclarationAccess().getDeclarationAssignment_0()); }
)

    |(
{ before(grammarAccess.getFieldDeclarationAccess().getStaticInitializerParserRuleCall_1()); }
	ruleStaticInitializer
{ after(grammarAccess.getFieldDeclarationAccess().getStaticInitializerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
(rule__FieldDeclaration__Group_2__0)
{ after(grammarAccess.getFieldDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__DeclarationAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getDeclarationMethodDeclarationParserRuleCall_0_0_0()); }
	ruleMethodDeclaration
{ after(grammarAccess.getFieldDeclarationAccess().getDeclarationMethodDeclarationParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getFieldDeclarationAccess().getDeclarationConstructorDeclarationParserRuleCall_0_0_1()); }
	ruleConstructorDeclaration
{ after(grammarAccess.getFieldDeclarationAccess().getDeclarationConstructorDeclarationParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getFieldDeclarationAccess().getDeclarationVariableDeclarationParserRuleCall_0_0_2()); }
	ruleVariableDeclaration
{ after(grammarAccess.getFieldDeclarationAccess().getDeclarationVariableDeclarationParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getStatement_blockAssignment_7_0()); }
(rule__MethodDeclaration__Statement_blockAssignment_7_0)
{ after(grammarAccess.getMethodDeclarationAccess().getStatement_blockAssignment_7_0()); }
)

    |(
{ before(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_1()); }

	';' 

{ after(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getExprAssignment_0()); }
(rule__VariableInitializer__ExprAssignment_0)
{ after(grammarAccess.getVariableInitializerAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getVariableInitializerAccess().getGroup_1()); }
(rule__VariableInitializer__Group_1__0)
{ after(grammarAccess.getVariableInitializerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getGroup_0()); }
(rule__NumericExpression__Group_0__0)
{ after(grammarAccess.getNumericExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getGroup_1()); }
(rule__NumericExpression__Group_1__0)
{ after(grammarAccess.getNumericExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getHyphenMinusKeyword_0_0_0()); }

	'-' 

{ after(grammarAccess.getNumericExpressionAccess().getHyphenMinusKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getPlusSignPlusSignKeyword_0_0_1()); }

	'++' 

{ after(grammarAccess.getNumericExpressionAccess().getPlusSignPlusSignKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getHyphenMinusHyphenMinusKeyword_0_0_2()); }

	'--' 

{ after(grammarAccess.getNumericExpressionAccess().getHyphenMinusHyphenMinusKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1_0()); }
(rule__NumericExpression__Alternatives_1_1_0)
{ after(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getGroup_1_1_1()); }
(rule__NumericExpression__Group_1_1_1__0)*
{ after(grammarAccess.getNumericExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getPlusSignPlusSignKeyword_1_1_0_0()); }

	'++' 

{ after(grammarAccess.getNumericExpressionAccess().getPlusSignPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_0_1()); }

	'--' 

{ after(grammarAccess.getNumericExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Alternatives_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getPlusSignKeyword_1_1_1_1_0()); }

	'+' 

{ after(grammarAccess.getNumericExpressionAccess().getPlusSignKeyword_1_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getPlusSignEqualsSignKeyword_1_1_1_1_1()); }

	'+=' 

{ after(grammarAccess.getNumericExpressionAccess().getPlusSignEqualsSignKeyword_1_1_1_1_1()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getHyphenMinusKeyword_1_1_1_1_2()); }

	'-' 

{ after(grammarAccess.getNumericExpressionAccess().getHyphenMinusKeyword_1_1_1_1_2()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getHyphenMinusEqualsSignKeyword_1_1_1_1_3()); }

	'-=' 

{ after(grammarAccess.getNumericExpressionAccess().getHyphenMinusEqualsSignKeyword_1_1_1_1_3()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getAsteriskKeyword_1_1_1_1_4()); }

	'*' 

{ after(grammarAccess.getNumericExpressionAccess().getAsteriskKeyword_1_1_1_1_4()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getAsteriskEqualsSignKeyword_1_1_1_1_5()); }

	'*=' 

{ after(grammarAccess.getNumericExpressionAccess().getAsteriskEqualsSignKeyword_1_1_1_1_5()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getSolidusKeyword_1_1_1_1_6()); }

	'/' 

{ after(grammarAccess.getNumericExpressionAccess().getSolidusKeyword_1_1_1_1_6()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getSolidusEqualsSignKeyword_1_1_1_1_7()); }

	'/=' 

{ after(grammarAccess.getNumericExpressionAccess().getSolidusEqualsSignKeyword_1_1_1_1_7()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getPercentSignKeyword_1_1_1_1_8()); }

	'%' 

{ after(grammarAccess.getNumericExpressionAccess().getPercentSignKeyword_1_1_1_1_8()); }
)

    |(
{ before(grammarAccess.getNumericExpressionAccess().getPercentSignEqualsSignKeyword_1_1_1_1_9()); }

	'%=' 

{ after(grammarAccess.getNumericExpressionAccess().getPercentSignEqualsSignKeyword_1_1_1_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getGroup_0()); }
(rule__BitExpression__Group_0__0)
{ after(grammarAccess.getBitExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBitExpressionAccess().getGroup_1()); }
(rule__BitExpression__Group_1__0)
{ after(grammarAccess.getBitExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_1_1_0()); }

	'>>=' 

{ after(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getBitExpressionAccess().getLessThanSignLessThanSignKeyword_1_1_1_1()); }

	'<<' 

{ after(grammarAccess.getBitExpressionAccess().getLessThanSignLessThanSignKeyword_1_1_1_1()); }
)

    |(
{ before(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_1_2()); }

	'>>' 

{ after(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_1_2()); }
)

    |(
{ before(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_1_3()); }

	'>>>' 

{ after(grammarAccess.getBitExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getGreaterThanSignKeyword_1_1_0()); }

	'>' 

{ after(grammarAccess.getTestingExpressionAccess().getGreaterThanSignKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getTestingExpressionAccess().getLessThanSignKeyword_1_1_1()); }

	'<' 

{ after(grammarAccess.getTestingExpressionAccess().getLessThanSignKeyword_1_1_1()); }
)

    |(
{ before(grammarAccess.getTestingExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_1_2()); }

	'>=' 

{ after(grammarAccess.getTestingExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_1_2()); }
)

    |(
{ before(grammarAccess.getTestingExpressionAccess().getLessThanSignEqualsSignKeyword_1_1_3()); }

	'<=' 

{ after(grammarAccess.getTestingExpressionAccess().getLessThanSignEqualsSignKeyword_1_1_3()); }
)

    |(
{ before(grammarAccess.getTestingExpressionAccess().getEqualsSignEqualsSignKeyword_1_1_4()); }

	'==' 

{ after(grammarAccess.getTestingExpressionAccess().getEqualsSignEqualsSignKeyword_1_1_4()); }
)

    |(
{ before(grammarAccess.getTestingExpressionAccess().getExclamationMarkEqualsSignKeyword_1_1_5()); }

	'!=' 

{ after(grammarAccess.getTestingExpressionAccess().getExclamationMarkEqualsSignKeyword_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0()); }
(rule__LogicalExpression__Group_0__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
(rule__LogicalExpression__Group_1__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_2()); }
(rule__LogicalExpression__Group_2__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_3()); }
(rule__LogicalExpression__Group_3__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1_1_0()); }
(rule__LogicalExpression__Group_1_1_0__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1_1_1()); }
(rule__LogicalExpression__Group_1_1_1__0)
{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getAmpersandKeyword_1_1_0_1_0()); }

	'&' 

{ after(grammarAccess.getLogicalExpressionAccess().getAmpersandKeyword_1_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getAmpersandEqualsSignKeyword_1_1_0_1_1()); }

	'&=' 

{ after(grammarAccess.getLogicalExpressionAccess().getAmpersandEqualsSignKeyword_1_1_0_1_1()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getVerticalLineKeyword_1_1_0_1_2()); }

	'|' 

{ after(grammarAccess.getLogicalExpressionAccess().getVerticalLineKeyword_1_1_0_1_2()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getVerticalLineEqualsSignKeyword_1_1_0_1_3()); }

	'|=' 

{ after(grammarAccess.getLogicalExpressionAccess().getVerticalLineEqualsSignKeyword_1_1_0_1_3()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getCircumflexAccentKeyword_1_1_0_1_4()); }

	'^' 

{ after(grammarAccess.getLogicalExpressionAccess().getCircumflexAccentKeyword_1_1_0_1_4()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getCircumflexAccentEqualsSignKeyword_1_1_0_1_5()); }

	'^=' 

{ after(grammarAccess.getLogicalExpressionAccess().getCircumflexAccentEqualsSignKeyword_1_1_0_1_5()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getAmpersandAmpersandKeyword_1_1_0_1_6()); }

	'&&' 

{ after(grammarAccess.getLogicalExpressionAccess().getAmpersandAmpersandKeyword_1_1_0_1_6()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getVerticalLineVerticalLineEqualsSignKeyword_1_1_0_1_7()); }

	'||=' 

{ after(grammarAccess.getLogicalExpressionAccess().getVerticalLineVerticalLineEqualsSignKeyword_1_1_0_1_7()); }
)

    |(
{ before(grammarAccess.getLogicalExpressionAccess().getVerticalLineVerticalLineKeyword_1_1_0_1_8()); }

	'||' 

{ after(grammarAccess.getLogicalExpressionAccess().getVerticalLineVerticalLineKeyword_1_1_0_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getGroup_1_0()); }
(rule__ArgsExpression__Group_1_0__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getArgsExpressionAccess().getGroup_1_1()); }
(rule__ArgsExpression__Group_1_1__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getArgsExpressionAccess().getGroup_1_2()); }
(rule__ArgsExpression__Group_1_2__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getArgsExpressionAccess().getGroup_1_3()); }
(rule__ArgsExpression__Group_1_3__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getArgsExpressionAccess().getGroup_1_4()); }
(rule__ArgsExpression__Group_1_4__0)
{ after(grammarAccess.getArgsExpressionAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_0()); }
(rule__CreatingExpression__Group_1_1_0__0)
{ after(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1()); }
(rule__CreatingExpression__Group_1_1_1__0)
{ after(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_0()); }
(rule__PrimaryExpression__ValueAssignment_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getNullKeyword_1_1()); }

	'null' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNullKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getSuperKeyword_1_2()); }

	'super' 

{ after(grammarAccess.getPrimaryExpressionAccess().getSuperKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_1_3()); }

	'this' 

{ after(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIDTerminalRuleCall_1_4()); }
	RULE_ID
{ after(grammarAccess.getPrimaryExpressionAccess().getIDTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Literal_valueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueIntegerLiteralParserRuleCall_0_0()); }
	ruleIntegerLiteral
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueIntegerLiteralParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueFloatLiteralParserRuleCall_0_1()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueFloatLiteralParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueSTRINGTerminalRuleCall_0_2()); }
	RULE_STRING
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueSTRINGTerminalRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueCharacterParserRuleCall_0_3()); }
	ruleCharacter
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueCharacterParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameBooleanKeyword_0_0()); }

	'boolean' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameBooleanKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameByteKeyword_0_1()); }

	'byte' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameByteKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameCharKeyword_0_2()); }

	'char' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameCharKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameShortKeyword_0_3()); }

	'short' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameShortKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameIntKeyword_0_4()); }

	'int' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameIntKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameFloatKeyword_0_5()); }

	'float' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameFloatKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameLongKeyword_0_6()); }

	'long' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameLongKeyword_0_6()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameDoubleKeyword_0_7()); }

	'double' 

{ after(grammarAccess.getTypeSpecifierAccess().getNameDoubleKeyword_0_7()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getNameObjectNameParserRuleCall_0_8()); }
	ruleObjectName
{ after(grammarAccess.getTypeSpecifierAccess().getNameObjectNameParserRuleCall_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getPublicKeyword_0()); }

	'public' 

{ after(grammarAccess.getModifierAccess().getPublicKeyword_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getPrivateKeyword_1()); }

	'private' 

{ after(grammarAccess.getModifierAccess().getPrivateKeyword_1()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getModifierAccess().getProtectedKeyword_2()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getStaticKeyword_3()); }

	'static' 

{ after(grammarAccess.getModifierAccess().getStaticKeyword_3()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getFinalKeyword_4()); }

	'final' 

{ after(grammarAccess.getModifierAccess().getFinalKeyword_4()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getNativeKeyword_5()); }

	'native' 

{ after(grammarAccess.getModifierAccess().getNativeKeyword_5()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getSynchronizedKeyword_6()); }

	'synchronized' 

{ after(grammarAccess.getModifierAccess().getSynchronizedKeyword_6()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getAbstractKeyword_7()); }

	'abstract' 

{ after(grammarAccess.getModifierAccess().getAbstractKeyword_7()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getThreadsafeKeyword_8()); }

	'threadsafe' 

{ after(grammarAccess.getModifierAccess().getThreadsafeKeyword_8()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getTransientKeyword_9()); }

	'transient' 

{ after(grammarAccess.getModifierAccess().getTransientKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getDecimal_integer_literalParserRuleCall_0()); }
	ruledecimal_integer_literal
{ after(grammarAccess.getIntegerLiteralAccess().getDecimal_integer_literalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getHex_integer_literalParserRuleCall_1()); }
	rulehex_integer_literal
{ after(grammarAccess.getIntegerLiteralAccess().getHex_integer_literalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getOctal_integer_literalParserRuleCall_2()); }
	ruleoctal_integer_literal
{ after(grammarAccess.getIntegerLiteralAccess().getOctal_integer_literalParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hexa_numeral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexa_numeralAccess().getGroup_0()); }
(rule__Hexa_numeral__Group_0__0)
{ after(grammarAccess.getHexa_numeralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHexa_numeralAccess().getHEXATerminalRuleCall_1()); }
	RULE_HEXA
{ after(grammarAccess.getHexa_numeralAccess().getHEXATerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hexa_numeral__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexa_numeralAccess().getXKeyword_0_0_0()); }

	'0x' 

{ after(grammarAccess.getHexa_numeralAccess().getXKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getHexa_numeralAccess().getXKeyword_0_0_1()); }

	'0X' 

{ after(grammarAccess.getHexa_numeralAccess().getXKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getGroup_0()); }
(rule__FloatLiteral__Group_0__0)
{ after(grammarAccess.getFloatLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFloatLiteralAccess().getGroup_1()); }
(rule__FloatLiteral__Group_1__0)
{ after(grammarAccess.getFloatLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariable_declarationAssignment_2_0()); }
(rule__ForStatement__Variable_declarationAssignment_2_0)
{ after(grammarAccess.getForStatementAccess().getVariable_declarationAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getGroup_2_1()); }
(rule__ForStatement__Group_2_1__0)
{ after(grammarAccess.getForStatementAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_2()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariable_declarationAssignment_0()); }
(rule__Statement__Variable_declarationAssignment_0)
{ after(grammarAccess.getStatementAccess().getVariable_declarationAssignment_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_blockAssignment_2()); }
(rule__Statement__Statement_blockAssignment_2)
{ after(grammarAccess.getStatementAccess().getStatement_blockAssignment_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIf_statementAssignment_3()); }
(rule__Statement__If_statementAssignment_3)
{ after(grammarAccess.getStatementAccess().getIf_statementAssignment_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDo_statementAssignment_4()); }
(rule__Statement__Do_statementAssignment_4)
{ after(grammarAccess.getStatementAccess().getDo_statementAssignment_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhile_statementAssignment_5()); }
(rule__Statement__While_statementAssignment_5)
{ after(grammarAccess.getStatementAccess().getWhile_statementAssignment_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFor_statementAssignment_6()); }
(rule__Statement__For_statementAssignment_6)
{ after(grammarAccess.getStatementAccess().getFor_statementAssignment_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTry_statementAssignment_7()); }
(rule__Statement__Try_statementAssignment_7)
{ after(grammarAccess.getStatementAccess().getTry_statementAssignment_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwith_statementAssignment_8()); }
(rule__Statement__Swith_statementAssignment_8)
{ after(grammarAccess.getStatementAccess().getSwith_statementAssignment_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_9()); }
(rule__Statement__Group_9__0)
{ after(grammarAccess.getStatementAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_10()); }
(rule__Statement__Group_10__0)
{ after(grammarAccess.getStatementAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_11()); }
(rule__Statement__Group_11__0)
{ after(grammarAccess.getStatementAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_12()); }
(rule__Statement__Group_12__0)
{ after(grammarAccess.getStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_13()); }
(rule__Statement__Group_13__0)
{ after(grammarAccess.getStatementAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_14()); }
(rule__Statement__Group_14__0)
{ after(grammarAccess.getStatementAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_15()); }
(rule__Statement__Group_15__0)
{ after(grammarAccess.getStatementAccess().getGroup_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup_5_0()); }
(rule__SwitchStatement__Group_5_0__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getSwitchStatementAccess().getGroup_5_1()); }
(rule__SwitchStatement__Group_5_1__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup_5_1()); }
)

    |(
{ before(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_5_2()); }
(rule__SwitchStatement__StatementsAssignment_5_2)
{ after(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CompilationUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__0__Impl
	rule__CompilationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getCompilationUnitAction_0()); }
(

)
{ after(grammarAccess.getCompilationUnitAccess().getCompilationUnitAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__1__Impl
	rule__CompilationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getPackageAssignment_1()); }
(rule__CompilationUnit__PackageAssignment_1)?
{ after(grammarAccess.getCompilationUnitAccess().getPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__2__Impl
	rule__CompilationUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getImportsAssignment_2()); }
(rule__CompilationUnit__ImportsAssignment_2)*
{ after(grammarAccess.getCompilationUnitAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getType_declarationsAssignment_3()); }
(rule__CompilationUnit__Type_declarationsAssignment_3)*
{ after(grammarAccess.getCompilationUnitAccess().getType_declarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PackageStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageStatement__Group__0__Impl
	rule__PackageStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStatementAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageStatementAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageStatement__Group__1__Impl
	rule__PackageStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStatementAccess().getObjectNameParserRuleCall_1()); }
	ruleObjectName
{ after(grammarAccess.getPackageStatementAccess().getObjectNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackageStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportStatement_ParserRuleCall_1()); }
	ruleImportStatement_
{ after(grammarAccess.getImportStatementAccess().getImportStatement_ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportStatement___Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement___Group__0__Impl
	rule__ImportStatement___Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement___Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatement_Access().getObjectNameParserRuleCall_0()); }
	ruleObjectName
{ after(grammarAccess.getImportStatement_Access().getObjectNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement___Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement___Group__1__Impl
	rule__ImportStatement___Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement___Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatement_Access().getGroup_1()); }
(rule__ImportStatement___Group_1__0)?
{ after(grammarAccess.getImportStatement_Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement___Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement___Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement___Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatement_Access().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportStatement_Access().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement___Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement___Group_1__0__Impl
	rule__ImportStatement___Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement___Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatement_Access().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getImportStatement_Access().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement___Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement___Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement___Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatement_Access().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getImportStatement_Access().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectName__Group__0__Impl
	rule__ObjectName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getObjectNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNameAccess().getGroup_1()); }
(rule__ObjectName__Group_1__0)*
{ after(grammarAccess.getObjectNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectName__Group_1__0__Impl
	rule__ObjectName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getObjectNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getObjectNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_0()); }
(rule__TypeDeclaration__Alternatives_0)
{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
(

)
{ after(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getModifiersAssignment_1()); }
(rule__ClassDeclaration__ModifiersAssignment_1)*
{ after(grammarAccess.getClassDeclarationAccess().getModifiersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getClassDeclarationAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__4__Impl
	rule__ClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_4()); }
(rule__ClassDeclaration__Group_4__0)?
{ after(grammarAccess.getClassDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__5__Impl
	rule__ClassDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_5()); }
(rule__ClassDeclaration__Group_5__0)?
{ after(grammarAccess.getClassDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__6__Impl
	rule__ClassDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__7__Impl
	rule__ClassDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getField_declarationsAssignment_7()); }
(rule__ClassDeclaration__Field_declarationsAssignment_7)*
{ after(grammarAccess.getClassDeclarationAccess().getField_declarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ClassDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_4__0__Impl
	rule__ClassDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getClassDeclarationAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_4_1()); }
	ruleObjectName
{ after(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_5__0__Impl
	rule__ClassDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getImplementsKeyword_5_0()); }

	'implements' 

{ after(grammarAccess.getClassDeclarationAccess().getImplementsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_5__1__Impl
	rule__ClassDeclaration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_5_1()); }
	ruleObjectName
{ after(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_5_2()); }
(rule__ClassDeclaration__Group_5_2__0)*
{ after(grammarAccess.getClassDeclarationAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDeclaration__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_5_2__0__Impl
	rule__ClassDeclaration__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getFullStopKeyword_5_2_0()); }

	'.' 

{ after(grammarAccess.getClassDeclarationAccess().getFullStopKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_5_2_1()); }
	ruleObjectName
{ after(grammarAccess.getClassDeclarationAccess().getObjectNameParserRuleCall_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceDeclarationAction_0()); }
(

)
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getModifierParserRuleCall_1()); }
(	ruleModifier)*
{ after(grammarAccess.getInterfaceDeclarationAccess().getModifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__2__Impl
	rule__InterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_2()); }

	'interface' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__3__Impl
	rule__InterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getInterfaceDeclarationAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__4__Impl
	rule__InterfaceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup_4()); }
(rule__InterfaceDeclaration__Group_4__0)?
{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__5__Impl
	rule__InterfaceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__6__Impl
	rule__InterfaceDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getField_declarationsAssignment_6()); }
(rule__InterfaceDeclaration__Field_declarationsAssignment_6)*
{ after(grammarAccess.getInterfaceDeclarationAccess().getField_declarationsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__InterfaceDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_4__0__Impl
	rule__InterfaceDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_4__1__Impl
	rule__InterfaceDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getObjectNameParserRuleCall_4_1()); }
	ruleObjectName
{ after(grammarAccess.getInterfaceDeclarationAccess().getObjectNameParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup_4_2()); }
(rule__InterfaceDeclaration__Group_4_2__0)*
{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceDeclaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_4_2__0__Impl
	rule__InterfaceDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getFullStopKeyword_4_2_0()); }

	'.' 

{ after(grammarAccess.getInterfaceDeclarationAccess().getFullStopKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getObjectNameParserRuleCall_4_2_1()); }
	ruleObjectName
{ after(grammarAccess.getInterfaceDeclarationAccess().getObjectNameParserRuleCall_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_2__0__Impl
	rule__FieldDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getFieldDeclarationAction_2_0()); }
(

)
{ after(grammarAccess.getFieldDeclarationAccess().getFieldDeclarationAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticInitializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInitializer__Group__0__Impl
	rule__StaticInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInitializerAccess().getStaticKeyword_0()); }

	'static' 

{ after(grammarAccess.getStaticInitializerAccess().getStaticKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInitializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInitializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInitializerAccess().getStatementBlockParserRuleCall_1()); }
	ruleStatementBlock
{ after(grammarAccess.getStaticInitializerAccess().getStatementBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getModifierParserRuleCall_0()); }
(	ruleModifier)*
{ after(grammarAccess.getMethodDeclarationAccess().getModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__1__Impl
	rule__MethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getMethodDeclarationAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__2__Impl
	rule__MethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getMethodDeclarationAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__3__Impl
	rule__MethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__4__Impl
	rule__MethodDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getParameterListParserRuleCall_4()); }
(	ruleParameterList)?
{ after(grammarAccess.getMethodDeclarationAccess().getParameterListParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__5__Impl
	rule__MethodDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__6__Impl
	rule__MethodDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup_6()); }
(rule__MethodDeclaration__Group_6__0)*
{ after(grammarAccess.getMethodDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getAlternatives_7()); }
(rule__MethodDeclaration__Alternatives_7)
{ after(grammarAccess.getMethodDeclarationAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MethodDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_6__0__Impl
	rule__MethodDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getLeftSquareBracketKeyword_6_0()); }

	'[' 

{ after(grammarAccess.getMethodDeclarationAccess().getLeftSquareBracketKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getRightSquareBracketKeyword_6_1()); }

	']' 

{ after(grammarAccess.getMethodDeclarationAccess().getRightSquareBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__0__Impl
	rule__ConstructorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getModifierParserRuleCall_0()); }
(	ruleModifier)*
{ after(grammarAccess.getConstructorDeclarationAccess().getModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__1__Impl
	rule__ConstructorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getConstructorDeclarationAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__2__Impl
	rule__ConstructorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConstructorDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__3__Impl
	rule__ConstructorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getParameterListParserRuleCall_3()); }
(	ruleParameterList)?
{ after(grammarAccess.getConstructorDeclarationAccess().getParameterListParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__4__Impl
	rule__ConstructorDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConstructorDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getStatement_blockAssignment_5()); }
(rule__ConstructorDeclaration__Statement_blockAssignment_5)
{ after(grammarAccess.getConstructorDeclarationAccess().getStatement_blockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParameterParserRuleCall_0()); }
	ruleParameter
{ after(grammarAccess.getParameterListAccess().getParameterParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
(rule__ParameterList__Group_1__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); }
(rule__ParameterList__ParametersAssignment_1_1)
{ after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getParameterAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getParameterAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)*
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }

	']' 

{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__0__Impl
	rule__StatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__1__Impl
	rule__StatementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementBlockAction_1()); }
(

)
{ after(grammarAccess.getStatementBlockAccess().getStatementBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__2__Impl
	rule__StatementBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
(rule__StatementBlock__StatementsAssignment_2)*
{ after(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getModifierParserRuleCall_0()); }
(	ruleModifier)*
{ after(grammarAccess.getVariableDeclarationAccess().getModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1()); }
(rule__VariableDeclaration__TypeAssignment_1)?
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorAssignment_2()); }
(rule__VariableDeclaration__Variable_declaratorAssignment_2)
{ after(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
(rule__VariableDeclaration__Group_3__0)*
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3__0__Impl
	rule__VariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorsAssignment_3_1()); }
(rule__VariableDeclaration__Variable_declaratorsAssignment_3_1)
{ after(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__0__Impl
	rule__VariableDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getVariableDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getVariableDeclaratorAccess().getVariableDeclaratorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__1__Impl
	rule__VariableDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getVariableDeclaratorAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__2__Impl
	rule__VariableDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup_2()); }
(rule__VariableDeclarator__Group_2__0)*
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup_3()); }
(rule__VariableDeclarator__Group_3__0)?
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclarator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_2__0__Impl
	rule__VariableDeclarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getVariableDeclaratorAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getRightSquareBracketKeyword_2_1()); }

	']' 

{ after(grammarAccess.getVariableDeclaratorAccess().getRightSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_3__0__Impl
	rule__VariableDeclarator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getVariable_initializerAssignment_3_1()); }
(rule__VariableDeclarator__Variable_initializerAssignment_3_1)
{ after(grammarAccess.getVariableDeclaratorAccess().getVariable_initializerAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableInitializer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1__0__Impl
	rule__VariableInitializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getVariableInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInitializer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1__1__Impl
	rule__VariableInitializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getGroup_1_1()); }
(rule__VariableInitializer__Group_1_1__0)?
{ after(grammarAccess.getVariableInitializerAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInitializer__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getVariableInitializerAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableInitializer__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1_1__0__Impl
	rule__VariableInitializer__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getVariable_initializerAssignment_1_1_0()); }
(rule__VariableInitializer__Variable_initializerAssignment_1_1_0)
{ after(grammarAccess.getVariableInitializerAccess().getVariable_initializerAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInitializer__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1_1__1__Impl
	rule__VariableInitializer__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getGroup_1_1_1()); }
(rule__VariableInitializer__Group_1_1_1__0)*
{ after(grammarAccess.getVariableInitializerAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInitializer__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getCommaKeyword_1_1_2()); }
(
	',' 
)?
{ after(grammarAccess.getVariableInitializerAccess().getCommaKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableInitializer__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1_1_1__0__Impl
	rule__VariableInitializer__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getVariableInitializerAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInitializer__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableInitializer__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getVariable_initializersAssignment_1_1_1_1()); }
(rule__VariableInitializer__Variable_initializersAssignment_1_1_1_1)
{ after(grammarAccess.getVariableInitializerAccess().getVariable_initializersAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSpecifierAssignment_0()); }
(rule__Type__SpecifierAssignment_0)
{ after(grammarAccess.getTypeAccess().getSpecifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)*
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_0__0__Impl
	rule__NumericExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getAlternatives_0_0()); }
(rule__NumericExpression__Alternatives_0_0)
{ after(grammarAccess.getNumericExpressionAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getBitExpressionParserRuleCall_0_1()); }
	ruleBitExpression
{ after(grammarAccess.getNumericExpressionAccess().getBitExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_1__0__Impl
	rule__NumericExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getBitExpressionParserRuleCall_1_0()); }
	ruleBitExpression
{ after(grammarAccess.getNumericExpressionAccess().getBitExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1()); }
(rule__NumericExpression__Alternatives_1_1)
{ after(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericExpression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_1_1_1__0__Impl
	rule__NumericExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getNumericLeftAction_1_1_1_0()); }
(

)
{ after(grammarAccess.getNumericExpressionAccess().getNumericLeftAction_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericExpression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_1_1_1__1__Impl
	rule__NumericExpression__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1_1_1()); }
(rule__NumericExpression__Alternatives_1_1_1_1)
{ after(grammarAccess.getNumericExpressionAccess().getAlternatives_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericExpression__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericExpression__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getRightAssignment_1_1_1_2()); }
(rule__NumericExpression__RightAssignment_1_1_1_2)
{ after(grammarAccess.getNumericExpressionAccess().getRightAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_0__0__Impl
	rule__BitExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getTildeKeyword_0_0()); }

	'~' 

{ after(grammarAccess.getBitExpressionAccess().getTildeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getLogicalExpressionParserRuleCall_0_1()); }
	ruleLogicalExpression
{ after(grammarAccess.getBitExpressionAccess().getLogicalExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_1__0__Impl
	rule__BitExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getLogicalExpressionParserRuleCall_1_0()); }
	ruleLogicalExpression
{ after(grammarAccess.getBitExpressionAccess().getLogicalExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getGroup_1_1()); }
(rule__BitExpression__Group_1_1__0)*
{ after(grammarAccess.getBitExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_1_1__0__Impl
	rule__BitExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getBitLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getBitExpressionAccess().getBitLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_1_1__1__Impl
	rule__BitExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getAlternatives_1_1_1()); }
(rule__BitExpression__Alternatives_1_1_1)
{ after(grammarAccess.getBitExpressionAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getRightAssignment_1_1_2()); }
(rule__BitExpression__RightAssignment_1_1_2)
{ after(grammarAccess.getBitExpressionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestingExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestingExpression__Group__0__Impl
	rule__TestingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getArgsExpressionParserRuleCall_0()); }
	ruleArgsExpression
{ after(grammarAccess.getTestingExpressionAccess().getArgsExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestingExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getGroup_1()); }
(rule__TestingExpression__Group_1__0)*
{ after(grammarAccess.getTestingExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestingExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestingExpression__Group_1__0__Impl
	rule__TestingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getTestingLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTestingExpressionAccess().getTestingLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestingExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestingExpression__Group_1__1__Impl
	rule__TestingExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getAlternatives_1_1()); }
(rule__TestingExpression__Alternatives_1_1)
{ after(grammarAccess.getTestingExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestingExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestingExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getRightAssignment_1_2()); }
(rule__TestingExpression__RightAssignment_1_2)
{ after(grammarAccess.getTestingExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_0__0__Impl
	rule__LogicalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getLogicalExpressionAccess().getExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightAssignment_0_1()); }
(rule__LogicalExpression__RightAssignment_0_1)
{ after(grammarAccess.getLogicalExpressionAccess().getRightAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1__0__Impl
	rule__LogicalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getTestingExpressionParserRuleCall_1_0()); }
	ruleTestingExpression
{ after(grammarAccess.getLogicalExpressionAccess().getTestingExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1()); }
(rule__LogicalExpression__Alternatives_1_1)*
{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_0__0__Impl
	rule__LogicalExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getLogicalLeftAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getLogicalExpressionAccess().getLogicalLeftAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_0__1__Impl
	rule__LogicalExpression__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1_0_1()); }
(rule__LogicalExpression__Alternatives_1_1_0_1)
{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_1_0_2()); }
(rule__LogicalExpression__RightAssignment_1_1_0_2)
{ after(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalExpression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__0__Impl
	rule__LogicalExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getLogicalLeftAction_1_1_1_0()); }
(

)
{ after(grammarAccess.getLogicalExpressionAccess().getLogicalLeftAction_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__1__Impl
	rule__LogicalExpression__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getQuestionMarkKeyword_1_1_1_1()); }

	'?' 

{ after(grammarAccess.getLogicalExpressionAccess().getQuestionMarkKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__2__Impl
	rule__LogicalExpression__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_1_1_2()); }
(rule__LogicalExpression__RightAssignment_1_1_1_2)
{ after(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__3__Impl
	rule__LogicalExpression__Group_1_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getLogicalTernaryAction_1_1_1_3()); }
(

)
{ after(grammarAccess.getLogicalExpressionAccess().getLogicalTernaryAction_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__4__Impl
	rule__LogicalExpression__Group_1_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getColonKeyword_1_1_1_4()); }

	':' 

{ after(grammarAccess.getLogicalExpressionAccess().getColonKeyword_1_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_1_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getTernary_endAssignment_1_1_1_5()); }
(rule__LogicalExpression__Ternary_endAssignment_1_1_1_5)
{ after(grammarAccess.getLogicalExpressionAccess().getTernary_endAssignment_1_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LogicalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_2__0__Impl
	rule__LogicalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getTrueKeyword_2_1()); }

	'true' 

{ after(grammarAccess.getLogicalExpressionAccess().getTrueKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_3__0__Impl
	rule__LogicalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getFalseKeyword_3_1()); }

	'false' 

{ after(grammarAccess.getLogicalExpressionAccess().getFalseKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgsExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group__0__Impl
	rule__ArgsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getCastingExpressionParserRuleCall_0()); }
	ruleCastingExpression
{ after(grammarAccess.getArgsExpressionAccess().getCastingExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getAlternatives_1()); }
(rule__ArgsExpression__Alternatives_1)*
{ after(grammarAccess.getArgsExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgsExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_0__0__Impl
	rule__ArgsExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getArgsExpressionAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_0__1__Impl
	rule__ArgsExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArg_listAssignment_1_0_1()); }
(rule__ArgsExpression__Arg_listAssignment_1_0_1)?
{ after(grammarAccess.getArgsExpressionAccess().getArg_listAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightParenthesisKeyword_1_0_2()); }

	')' 

{ after(grammarAccess.getArgsExpressionAccess().getRightParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgsExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_1__0__Impl
	rule__ArgsExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_1__1__Impl
	rule__ArgsExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getArgsExpressionAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_1_2()); }
(rule__ArgsExpression__RightAssignment_1_1_2)
{ after(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgsExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_2__0__Impl
	rule__ArgsExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_2_0()); }
(

)
{ after(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_2__1__Impl
	rule__ArgsExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getLeftSquareBracketKeyword_1_2_1()); }

	'[' 

{ after(grammarAccess.getArgsExpressionAccess().getLeftSquareBracketKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_2__2__Impl
	rule__ArgsExpression__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_2_2()); }
(rule__ArgsExpression__RightAssignment_1_2_2)
{ after(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightSquareBracketKeyword_1_2_3()); }

	']' 

{ after(grammarAccess.getArgsExpressionAccess().getRightSquareBracketKeyword_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArgsExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_3__0__Impl
	rule__ArgsExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_3_0()); }
(

)
{ after(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_3__1__Impl
	rule__ArgsExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getCommaKeyword_1_3_1()); }

	',' 

{ after(grammarAccess.getArgsExpressionAccess().getCommaKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_3_2()); }
(rule__ArgsExpression__RightAssignment_1_3_2)
{ after(grammarAccess.getArgsExpressionAccess().getRightAssignment_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgsExpression__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_4__0__Impl
	rule__ArgsExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_4_0()); }
(

)
{ after(grammarAccess.getArgsExpressionAccess().getArgsLeftAction_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_4__1__Impl
	rule__ArgsExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getInstanceofKeyword_1_4_1()); }

	'instanceof' 

{ after(grammarAccess.getArgsExpressionAccess().getInstanceofKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgsExpression__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgsExpression__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getObjectNameParserRuleCall_1_4_2()); }
	ruleObjectName
{ after(grammarAccess.getArgsExpressionAccess().getObjectNameParserRuleCall_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arglist__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group__0__Impl
	rule__Arglist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getArgAssignment_0()); }
(rule__Arglist__ArgAssignment_0)
{ after(grammarAccess.getArglistAccess().getArgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arglist__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getGroup_1()); }
(rule__Arglist__Group_1__0)*
{ after(grammarAccess.getArglistAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arglist__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group_1__0__Impl
	rule__Arglist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getArglistAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arglist__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getArgsAssignment_1_1()); }
(rule__Arglist__ArgsAssignment_1_1)
{ after(grammarAccess.getArglistAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CastingExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group__0__Impl
	rule__CastingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getCreatingExpressionParserRuleCall_0()); }
	ruleCreatingExpression
{ after(grammarAccess.getCastingExpressionAccess().getCreatingExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastingExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getGroup_1()); }
(rule__CastingExpression__Group_1__0)*
{ after(grammarAccess.getCastingExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CastingExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group_1__0__Impl
	rule__CastingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getCastingLeftAction_1_0()); }
(

)
{ after(grammarAccess.getCastingExpressionAccess().getCastingLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastingExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group_1__1__Impl
	rule__CastingExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getCastingExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastingExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group_1__2__Impl
	rule__CastingExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getTypesAssignment_1_2()); }
(rule__CastingExpression__TypesAssignment_1_2)
{ after(grammarAccess.getCastingExpressionAccess().getTypesAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastingExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group_1__3__Impl
	rule__CastingExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getCastingExpressionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastingExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastingExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getRightAssignment_1_4()); }
(rule__CastingExpression__RightAssignment_1_4)
{ after(grammarAccess.getCastingExpressionAccess().getRightAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CreatingExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group__0__Impl
	rule__CreatingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getParenthesisExpressionParserRuleCall_0()); }
	ruleParenthesisExpression
{ after(grammarAccess.getCreatingExpressionAccess().getParenthesisExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup_1()); }
(rule__CreatingExpression__Group_1__0)*
{ after(grammarAccess.getCreatingExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreatingExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1__0__Impl
	rule__CreatingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getNewKeyword_1_0()); }

	'new' 

{ after(grammarAccess.getCreatingExpressionAccess().getNewKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getAlternatives_1_1()); }
(rule__CreatingExpression__Alternatives_1_1)
{ after(grammarAccess.getCreatingExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreatingExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_0__0__Impl
	rule__CreatingExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getObjectNameParserRuleCall_1_1_0_0()); }
	ruleObjectName
{ after(grammarAccess.getCreatingExpressionAccess().getObjectNameParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_0__1__Impl
	rule__CreatingExpression__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getLeftParenthesisKeyword_1_1_0_1()); }

	'(' 

{ after(grammarAccess.getCreatingExpressionAccess().getLeftParenthesisKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_0__2__Impl
	rule__CreatingExpression__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getArg_listAssignment_1_1_0_2()); }
(rule__CreatingExpression__Arg_listAssignment_1_1_0_2)?
{ after(grammarAccess.getCreatingExpressionAccess().getArg_listAssignment_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getRightParenthesisKeyword_1_1_0_3()); }

	')' 

{ after(grammarAccess.getCreatingExpressionAccess().getRightParenthesisKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CreatingExpression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1__0__Impl
	rule__CreatingExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getType_specifiersAssignment_1_1_1_0()); }
(rule__CreatingExpression__Type_specifiersAssignment_1_1_1_0)
{ after(grammarAccess.getCreatingExpressionAccess().getType_specifiersAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1__1__Impl
	rule__CreatingExpression__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1_1()); }
(rule__CreatingExpression__Group_1_1_1_1__0)?
{ after(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1_2()); }
(rule__CreatingExpression__Group_1_1_1_2__0)*
{ after(grammarAccess.getCreatingExpressionAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CreatingExpression__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1_1__0__Impl
	rule__CreatingExpression__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getLeftSquareBracketKeyword_1_1_1_1_0()); }

	'[' 

{ after(grammarAccess.getCreatingExpressionAccess().getLeftSquareBracketKeyword_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1_1__1__Impl
	rule__CreatingExpression__Group_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getParenthesisAssignment_1_1_1_1_1()); }
(rule__CreatingExpression__ParenthesisAssignment_1_1_1_1_1)
{ after(grammarAccess.getCreatingExpressionAccess().getParenthesisAssignment_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getRightSquareBracketKeyword_1_1_1_1_2()); }

	']' 

{ after(grammarAccess.getCreatingExpressionAccess().getRightSquareBracketKeyword_1_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CreatingExpression__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1_2__0__Impl
	rule__CreatingExpression__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getLeftSquareBracketKeyword_1_1_1_2_0()); }

	'[' 

{ after(grammarAccess.getCreatingExpressionAccess().getLeftSquareBracketKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreatingExpression__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreatingExpression__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getRightSquareBracketKeyword_1_1_1_2_1()); }

	']' 

{ after(grammarAccess.getCreatingExpressionAccess().getRightSquareBracketKeyword_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesisExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group__0__Impl
	rule__ParenthesisExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getParenthesisExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getGroup_1()); }
(rule__ParenthesisExpression__Group_1__0)*
{ after(grammarAccess.getParenthesisExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesisExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group_1__0__Impl
	rule__ParenthesisExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getParenthesisExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group_1__1__Impl
	rule__ParenthesisExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getParenthesisAssignment_1_1()); }
(rule__ParenthesisExpression__ParenthesisAssignment_1_1)
{ after(grammarAccess.getParenthesisExpressionAccess().getParenthesisAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getParenthesisExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
(rule__PrimaryExpression__Alternatives_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Decimal_digits__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal_digits__Group__0__Impl
	rule__Decimal_digits__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_digits__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimal_digitsAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDecimal_digitsAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal_digits__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal_digits__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_digits__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimal_digitsAccess().getINTTerminalRuleCall_1()); }
(	RULE_INT)*
{ after(grammarAccess.getDecimal_digitsAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
(rule__DoStatement__StatementAssignment_1)
{ after(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
(rule__DoStatement__ExpressionAssignment_4)
{ after(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Decimal_integer_literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal_integer_literal__Group__0__Impl
	rule__Decimal_integer_literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_integer_literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimal_integer_literalAccess().getDecimal_digitsParserRuleCall_0()); }
	ruledecimal_digits
{ after(grammarAccess.getDecimal_integer_literalAccess().getDecimal_digitsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal_integer_literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal_integer_literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_integer_literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimal_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
(	RULE_NUMBER_SUFFIX)?
{ after(grammarAccess.getDecimal_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Hex_integer_literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hex_integer_literal__Group__0__Impl
	rule__Hex_integer_literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_integer_literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHex_integer_literalAccess().getHexa_numeralParserRuleCall_0()); }
	rulehexa_numeral
{ after(grammarAccess.getHex_integer_literalAccess().getHexa_numeralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_integer_literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hex_integer_literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_integer_literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHex_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
(	RULE_NUMBER_SUFFIX)?
{ after(grammarAccess.getHex_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Hexa_numeral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hexa_numeral__Group_0__0__Impl
	rule__Hexa_numeral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hexa_numeral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexa_numeralAccess().getAlternatives_0_0()); }
(rule__Hexa_numeral__Alternatives_0_0)
{ after(grammarAccess.getHexa_numeralAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hexa_numeral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hexa_numeral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hexa_numeral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexa_numeralAccess().getHEXATerminalRuleCall_0_1()); }
	RULE_HEXA
{ after(grammarAccess.getHexa_numeralAccess().getHEXATerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Octal_integer_literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Octal_integer_literal__Group__0__Impl
	rule__Octal_integer_literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_integer_literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOctal_integer_literalAccess().getOctal_numeralParserRuleCall_0()); }
	ruleoctal_numeral
{ after(grammarAccess.getOctal_integer_literalAccess().getOctal_numeralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_integer_literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Octal_integer_literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_integer_literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOctal_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
(	RULE_NUMBER_SUFFIX)?
{ after(grammarAccess.getOctal_integer_literalAccess().getNUMBER_SUFFIXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FloatLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_0__0__Impl
	rule__FloatLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_0_0()); }
	ruledecimal_digits
{ after(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_0__1__Impl
	rule__FloatLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFullStopKeyword_0_1()); }
(
	'.' 
)?
{ after(grammarAccess.getFloatLiteralAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_0__2__Impl
	rule__FloatLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_0_2()); }
(	ruledecimal_digits)?
{ after(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_0__3__Impl
	rule__FloatLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getExponent_partParserRuleCall_0_3()); }
(	ruleexponent_part)?
{ after(grammarAccess.getFloatLiteralAccess().getExponent_partParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFLOAT_SUFFIXTerminalRuleCall_0_4()); }
(	RULE_FLOAT_SUFFIX)?
{ after(grammarAccess.getFloatLiteralAccess().getFLOAT_SUFFIXTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FloatLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_1__0__Impl
	rule__FloatLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFloatLiteralAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_1__1__Impl
	rule__FloatLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_1_1()); }
	ruledecimal_digits
{ after(grammarAccess.getFloatLiteralAccess().getDecimal_digitsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_1__2__Impl
	rule__FloatLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getExponent_partParserRuleCall_1_2()); }
(	ruleexponent_part)?
{ after(grammarAccess.getFloatLiteralAccess().getExponent_partParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatLiteral__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFLOAT_SUFFIXTerminalRuleCall_1_3()); }
(	RULE_FLOAT_SUFFIX)?
{ after(grammarAccess.getFloatLiteralAccess().getFLOAT_SUFFIXTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getAlternatives_2()); }
(rule__ForStatement__Alternatives_2)
{ after(grammarAccess.getForStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression2Assignment_3()); }
(rule__ForStatement__For_expression2Assignment_3)?
{ after(grammarAccess.getForStatementAccess().getFor_expression2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression3Assignment_5()); }
(rule__ForStatement__For_expression3Assignment_5)?
{ after(grammarAccess.getForStatementAccess().getFor_expression3Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStatementAssignment_8()); }
(rule__ForStatement__StatementAssignment_8)
{ after(grammarAccess.getForStatementAccess().getStatementAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ForStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__0__Impl
	rule__ForStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression1Assignment_2_1_0()); }
(rule__ForStatement__For_expression1Assignment_2_1_0)
{ after(grammarAccess.getForStatementAccess().getFor_expression1Assignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_1()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
(rule__IfStatement__ExpressionAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIf_statementAssignment_4()); }
(rule__IfStatement__If_statementAssignment_4)
{ after(grammarAccess.getIfStatementAccess().getIf_statementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElse_statementAssignment_5_1()); }
(rule__IfStatement__Else_statementAssignment_5_1)
{ after(grammarAccess.getIfStatementAccess().getElse_statementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatement_expressionAssignment_1_0()); }
(rule__Statement__Statement_expressionAssignment_1_0)
{ after(grammarAccess.getStatementAccess().getStatement_expressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__0__Impl
	rule__Statement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_9_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_9_1()); }
(rule__Statement__Group_9_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9_1__0__Impl
	rule__Statement__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSynchronizedKeyword_9_1_0()); }

	'synchronized' 

{ after(grammarAccess.getStatementAccess().getSynchronizedKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9_1__1__Impl
	rule__Statement__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_1_1()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9_1__2__Impl
	rule__Statement__Group_9_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSync_expressionAssignment_9_1_2()); }
(rule__Statement__Sync_expressionAssignment_9_1_2)
{ after(grammarAccess.getStatementAccess().getSync_expressionAssignment_9_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9_1__3__Impl
	rule__Statement__Group_9_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_1_3()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSync_statementAssignment_9_1_4()); }
(rule__Statement__Sync_statementAssignment_9_1_4)
{ after(grammarAccess.getStatementAccess().getSync_statementAssignment_9_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__0__Impl
	rule__Statement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_10_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_10_1()); }
(rule__Statement__Group_10_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_10_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10_1__0__Impl
	rule__Statement__Group_10_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_10_1_0()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10_1__1__Impl
	rule__Statement__Group_10_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturn_expressionAssignment_10_1_1()); }
(rule__Statement__Return_expressionAssignment_10_1_1)?
{ after(grammarAccess.getStatementAccess().getReturn_expressionAssignment_10_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_10_1_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_10_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__0__Impl
	rule__Statement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_11_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_11_1()); }
(rule__Statement__Group_11_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_11_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11_1__0__Impl
	rule__Statement__Group_11_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThrowKeyword_11_1_0()); }

	'throw' 

{ after(grammarAccess.getStatementAccess().getThrowKeyword_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11_1__1__Impl
	rule__Statement__Group_11_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThrow_expressionAssignment_11_1_1()); }
(rule__Statement__Throw_expressionAssignment_11_1_1)
{ after(grammarAccess.getStatementAccess().getThrow_expressionAssignment_11_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_11_1_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_11_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__0__Impl
	rule__Statement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_12_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_12_1()); }
(rule__Statement__Group_12_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_12_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12_1__0__Impl
	rule__Statement__Group_12_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDTerminalRuleCall_12_1_0()); }
	RULE_ID
{ after(grammarAccess.getStatementAccess().getIDTerminalRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12_1__1__Impl
	rule__Statement__Group_12_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_12_1_1()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_12_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNamed_statementAssignment_12_1_2()); }
(rule__Statement__Named_statementAssignment_12_1_2)
{ after(grammarAccess.getStatementAccess().getNamed_statementAssignment_12_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__0__Impl
	rule__Statement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_13_1()); }
(rule__Statement__Group_13_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_13_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13_1__0__Impl
	rule__Statement__Group_13_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_13_1_0()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13_1__1__Impl
	rule__Statement__Group_13_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDTerminalRuleCall_13_1_1()); }
(	RULE_ID)?
{ after(grammarAccess.getStatementAccess().getIDTerminalRuleCall_13_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_13_1_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_13_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__0__Impl
	rule__Statement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_14_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_14_1()); }
(rule__Statement__Group_14_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_14_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14_1__0__Impl
	rule__Statement__Group_14_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueKeyword_14_1_0()); }

	'continue' 

{ after(grammarAccess.getStatementAccess().getContinueKeyword_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14_1__1__Impl
	rule__Statement__Group_14_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDTerminalRuleCall_14_1_1()); }
(	RULE_ID)?
{ after(grammarAccess.getStatementAccess().getIDTerminalRuleCall_14_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_14_1_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_14_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_15__0__Impl
	rule__Statement__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_15_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_15_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitch_expressionAssignment_2()); }
(rule__SwitchStatement__Switch_expressionAssignment_2)
{ after(grammarAccess.getSwitchStatementAccess().getSwitch_expressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getAlternatives_5()); }
(rule__SwitchStatement__Alternatives_5)*
{ after(grammarAccess.getSwitchStatementAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchStatement__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group_5_0__0__Impl
	rule__SwitchStatement__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCaseKeyword_5_0_0()); }

	'case' 

{ after(grammarAccess.getSwitchStatementAccess().getCaseKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group_5_0__1__Impl
	rule__SwitchStatement__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCase_expressionsAssignment_5_0_1()); }
(rule__SwitchStatement__Case_expressionsAssignment_5_0_1)
{ after(grammarAccess.getSwitchStatementAccess().getCase_expressionsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_0_2()); }

	':' 

{ after(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchStatement__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group_5_1__0__Impl
	rule__SwitchStatement__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_5_1_0()); }

	'default' 

{ after(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_1_1()); }

	':' 

{ after(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__0__Impl
	rule__TryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__1__Impl
	rule__TryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTry_statementAssignment_1()); }
(rule__TryStatement__Try_statementAssignment_1)
{ after(grammarAccess.getTryStatementAccess().getTry_statementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__2__Impl
	rule__TryStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_2()); }
(rule__TryStatement__Group_2__0)*
{ after(grammarAccess.getTryStatementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_3()); }
(rule__TryStatement__Group_3__0)?
{ after(grammarAccess.getTryStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TryStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_2__0__Impl
	rule__TryStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatchKeyword_2_0()); }

	'catch' 

{ after(grammarAccess.getTryStatementAccess().getCatchKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_2__1__Impl
	rule__TryStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_2__2__Impl
	rule__TryStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getParamentersAssignment_2_2()); }
(rule__TryStatement__ParamentersAssignment_2_2)
{ after(grammarAccess.getTryStatementAccess().getParamentersAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_2__3__Impl
	rule__TryStatement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatch_statementsAssignment_2_4()); }
(rule__TryStatement__Catch_statementsAssignment_2_4)
{ after(grammarAccess.getTryStatementAccess().getCatch_statementsAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TryStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_3__0__Impl
	rule__TryStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyKeyword_3_0()); }

	'finally' 

{ after(grammarAccess.getTryStatementAccess().getFinallyKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinally_statementAssignment_3_1()); }
(rule__TryStatement__Finally_statementAssignment_3_1)
{ after(grammarAccess.getTryStatementAccess().getFinally_statementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__0__Impl
	rule__While_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__1__Impl
	rule__While_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhile_statementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__2__Impl
	rule__While_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getExpressionAssignment_2()); }
(rule__While_statement__ExpressionAssignment_2)
{ after(grammarAccess.getWhile_statementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__3__Impl
	rule__While_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhile_statementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getStatementAssignment_4()); }
(rule__While_statement__StatementAssignment_4)
{ after(grammarAccess.getWhile_statementAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Head__JavaAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getJavaCompilationUnitParserRuleCall_0()); }
	ruleCompilationUnit{ after(grammarAccess.getHeadAccess().getJavaCompilationUnitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__PackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getPackagePackageStatementParserRuleCall_1_0()); }
	rulePackageStatement{ after(grammarAccess.getCompilationUnitAccess().getPackagePackageStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getImportsImportStatementParserRuleCall_2_0()); }
	ruleImportStatement{ after(grammarAccess.getCompilationUnitAccess().getImportsImportStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Type_declarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getType_declarationsTypeDeclarationParserRuleCall_3_0()); }
	ruleTypeDeclaration{ after(grammarAccess.getCompilationUnitAccess().getType_declarationsTypeDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Class_declarationAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getClass_declarationClassDeclarationParserRuleCall_0_0_0()); }
	ruleClassDeclaration{ after(grammarAccess.getTypeDeclarationAccess().getClass_declarationClassDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Interface_declarationAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getInterface_declarationInterfaceDeclarationParserRuleCall_0_1_0()); }
	ruleInterfaceDeclaration{ after(grammarAccess.getTypeDeclarationAccess().getInterface_declarationInterfaceDeclarationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ModifiersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getModifiersModifierParserRuleCall_1_0()); }
	ruleModifier{ after(grammarAccess.getClassDeclarationAccess().getModifiersModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Field_declarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getField_declarationsFieldDeclarationParserRuleCall_7_0()); }
	ruleFieldDeclaration{ after(grammarAccess.getClassDeclarationAccess().getField_declarationsFieldDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Field_declarationsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getField_declarationsFieldDeclarationParserRuleCall_6_0()); }
	ruleFieldDeclaration{ after(grammarAccess.getInterfaceDeclarationAccess().getField_declarationsFieldDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__DeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getDeclarationAlternatives_0_0()); }
(rule__FieldDeclaration__DeclarationAlternatives_0_0)
{ after(grammarAccess.getFieldDeclarationAccess().getDeclarationAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Statement_blockAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getStatement_blockStatementBlockParserRuleCall_7_0_0()); }
	ruleStatementBlock{ after(grammarAccess.getMethodDeclarationAccess().getStatement_blockStatementBlockParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Statement_blockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDeclarationAccess().getStatement_blockStatementBlockParserRuleCall_5_0()); }
	ruleStatementBlock{ after(grammarAccess.getConstructorDeclarationAccess().getStatement_blockStatementBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Variable_declaratorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorVariableDeclaratorParserRuleCall_2_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorVariableDeclaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Variable_declaratorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorsVariableDeclaratorParserRuleCall_3_1_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getVariableDeclarationAccess().getVariable_declaratorsVariableDeclaratorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Variable_initializerAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getVariable_initializerVariableInitializerParserRuleCall_3_1_0()); }
	ruleVariableInitializer{ after(grammarAccess.getVariableDeclaratorAccess().getVariable_initializerVariableInitializerParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getVariableInitializerAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Variable_initializerAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getVariable_initializerVariableInitializerParserRuleCall_1_1_0_0()); }
	ruleVariableInitializer{ after(grammarAccess.getVariableInitializerAccess().getVariable_initializerVariableInitializerParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Variable_initializersAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableInitializerAccess().getVariable_initializersVariableInitializerParserRuleCall_1_1_1_1_0()); }
	ruleVariableInitializer{ after(grammarAccess.getVariableInitializerAccess().getVariable_initializersVariableInitializerParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SpecifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSpecifierTypeSpecifierParserRuleCall_0_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getTypeAccess().getSpecifierTypeSpecifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExpression__RightAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericExpressionAccess().getRightBitExpressionParserRuleCall_1_1_1_2_0()); }
	ruleBitExpression{ after(grammarAccess.getNumericExpressionAccess().getRightBitExpressionParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitExpression__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitExpressionAccess().getRightLogicalExpressionParserRuleCall_1_1_2_0()); }
	ruleLogicalExpression{ after(grammarAccess.getBitExpressionAccess().getRightLogicalExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestingExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestingExpressionAccess().getRightArgsExpressionParserRuleCall_1_2_0()); }
	ruleArgsExpression{ after(grammarAccess.getTestingExpressionAccess().getRightArgsExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RightAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_0_1_0()); }
	ruleTestingExpression{ after(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RightAssignment_1_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_1_1_0_2_0()); }
	ruleTestingExpression{ after(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RightAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_1_1_1_2_0()); }
	ruleTestingExpression{ after(grammarAccess.getLogicalExpressionAccess().getRightTestingExpressionParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Ternary_endAssignment_1_1_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalExpressionAccess().getTernary_endTestingExpressionParserRuleCall_1_1_1_5_0()); }
	ruleTestingExpression{ after(grammarAccess.getLogicalExpressionAccess().getTernary_endTestingExpressionParserRuleCall_1_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__Arg_listAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getArg_listArglistParserRuleCall_1_0_1_0()); }
	ruleArglist{ after(grammarAccess.getArgsExpressionAccess().getArg_listArglistParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_1_2_0()); }
	ruleCastingExpression{ after(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__RightAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_2_2_0()); }
	ruleCastingExpression{ after(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsExpression__RightAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_3_2_0()); }
	ruleCastingExpression{ after(grammarAccess.getArgsExpressionAccess().getRightCastingExpressionParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__ArgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getArgCastingExpressionParserRuleCall_0_0()); }
	ruleCastingExpression{ after(grammarAccess.getArglistAccess().getArgCastingExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getArgsCastingExpressionParserRuleCall_1_1_0()); }
	ruleCastingExpression{ after(grammarAccess.getArglistAccess().getArgsCastingExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__TypesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getTypesTypeParserRuleCall_1_2_0()); }
	ruleType{ after(grammarAccess.getCastingExpressionAccess().getTypesTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastingExpression__RightAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastingExpressionAccess().getRightCreatingExpressionParserRuleCall_1_4_0()); }
	ruleCreatingExpression{ after(grammarAccess.getCastingExpressionAccess().getRightCreatingExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Arg_listAssignment_1_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getArg_listArglistParserRuleCall_1_1_0_2_0()); }
	ruleArglist{ after(grammarAccess.getCreatingExpressionAccess().getArg_listArglistParserRuleCall_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__Type_specifiersAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getType_specifiersTypeSpecifierParserRuleCall_1_1_1_0_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getCreatingExpressionAccess().getType_specifiersTypeSpecifierParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreatingExpression__ParenthesisAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatingExpressionAccess().getParenthesisParenthesisExpressionParserRuleCall_1_1_1_1_1_0()); }
	ruleParenthesisExpression{ after(grammarAccess.getCreatingExpressionAccess().getParenthesisParenthesisExpressionParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__ParenthesisAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getParenthesisPrimaryExpressionParserRuleCall_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getParenthesisExpressionAccess().getParenthesisPrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueLiteralExpressionParserRuleCall_1_0_0()); }
	ruleLiteralExpression{ after(grammarAccess.getPrimaryExpressionAccess().getValueLiteralExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Literal_valueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteral_valueAlternatives_0()); }
(rule__LiteralExpression__Literal_valueAlternatives_0)
{ after(grammarAccess.getLiteralExpressionAccess().getLiteral_valueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAlternatives_0()); }
(rule__TypeSpecifier__NameAlternatives_0)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Variable_declarationAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariable_declarationVariableDeclarationParserRuleCall_2_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getForStatementAccess().getVariable_declarationVariableDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__For_expression1Assignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression1ExpressionParserRuleCall_2_1_0_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getFor_expression1ExpressionParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__For_expression2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression2ExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getFor_expression2ExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__For_expression3Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getFor_expression3ExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getFor_expression3ExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StatementAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_8_0()); }
	ruleStatement{ after(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__If_statementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIf_statementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getIf_statementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Else_statementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElse_statementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getElse_statementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Variable_declarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariable_declarationVariableDeclarationParserRuleCall_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getStatementAccess().getVariable_declarationVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Statement_expressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatement_expressionExpressionParserRuleCall_1_0_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getStatement_expressionExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Statement_blockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatement_blockStatementBlockParserRuleCall_2_0()); }
	ruleStatementBlock{ after(grammarAccess.getStatementAccess().getStatement_blockStatementBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__If_statementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIf_statementIfStatementParserRuleCall_3_0()); }
	ruleIfStatement{ after(grammarAccess.getStatementAccess().getIf_statementIfStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Do_statementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDo_statementDoStatementParserRuleCall_4_0()); }
	ruleDoStatement{ after(grammarAccess.getStatementAccess().getDo_statementDoStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__While_statementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhile_statementWhile_statementParserRuleCall_5_0()); }
	rulewhile_statement{ after(grammarAccess.getStatementAccess().getWhile_statementWhile_statementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__For_statementAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getFor_statementForStatementParserRuleCall_6_0()); }
	ruleForStatement{ after(grammarAccess.getStatementAccess().getFor_statementForStatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Try_statementAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTry_statementTryStatementParserRuleCall_7_0()); }
	ruleTryStatement{ after(grammarAccess.getStatementAccess().getTry_statementTryStatementParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Swith_statementAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSwith_statementSwitchStatementParserRuleCall_8_0()); }
	ruleSwitchStatement{ after(grammarAccess.getStatementAccess().getSwith_statementSwitchStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Sync_expressionAssignment_9_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSync_expressionExpressionParserRuleCall_9_1_2_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getSync_expressionExpressionParserRuleCall_9_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Sync_statementAssignment_9_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSync_statementStatementParserRuleCall_9_1_4_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getSync_statementStatementParserRuleCall_9_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Return_expressionAssignment_10_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturn_expressionExpressionParserRuleCall_10_1_1_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getReturn_expressionExpressionParserRuleCall_10_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Throw_expressionAssignment_11_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThrow_expressionExpressionParserRuleCall_11_1_1_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getThrow_expressionExpressionParserRuleCall_11_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Named_statementAssignment_12_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNamed_statementStatementParserRuleCall_12_1_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getNamed_statementStatementParserRuleCall_12_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Switch_expressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitch_expressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchStatementAccess().getSwitch_expressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Case_expressionsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCase_expressionsExpressionParserRuleCall_5_0_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitchStatementAccess().getCase_expressionsExpressionParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__StatementsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getStatementsStatementParserRuleCall_5_2_0()); }
	ruleStatement{ after(grammarAccess.getSwitchStatementAccess().getStatementsStatementParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Try_statementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTry_statementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getTryStatementAccess().getTry_statementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__ParamentersAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getParamentersParameterParserRuleCall_2_2_0()); }
	ruleParameter{ after(grammarAccess.getTryStatementAccess().getParamentersParameterParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Catch_statementsAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatch_statementsStatementParserRuleCall_2_4_0()); }
	ruleStatement{ after(grammarAccess.getTryStatementAccess().getCatch_statementsStatementParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Finally_statementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinally_statementStatementParserRuleCall_3_1_0()); }
	ruleStatement{ after(grammarAccess.getTryStatementAccess().getFinally_statementStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhile_statementAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEXA : '0..9a..f';

RULE_FLOAT_SUFFIX : ('0..9f'|'0..9d');

RULE_NUMBER_SUFFIX : ('0..9L'|'0..9l');

RULE_ZERO_TO_SEVEN : '0..7';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


